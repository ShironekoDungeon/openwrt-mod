toolchain/gcc/patches/6.2.0
toolchain/gcc/patches/5.4.0
--- gcc-5.2.0.orig/libgo/mksysinfo.sh
+++ gcc-5.2.0/libgo/mksysinfo.sh
@@ -166,6 +166,17 @@ cat > sysinfo.c <<EOF
 #if defined(HAVE_SCHED_H)
 #include <sched.h>
 #endif
+#if !(defined __GLIBC__ || defined __UCLIBC__)
+#include <sys/glibc-types.h>
+#undef _off64_t
+#undef off64_t
+#undef _loff_t
+#undef loff_t
+typedef off_t _loff_t;
+typedef off_t loff_t;
+typedef off_t off64_t;
+typedef off_t _off64_t;
+#endif
 
 /* Constants that may only be defined as expressions on some systems,
    expressions too complex for -fdump-go-spec to handle.  These are
Index: gcc-5.2.0/configure
===================================================================
--- gcc-5.2.0.orig/configure
+++ gcc-5.2.0/configure
@@ -641,6 +641,7 @@ BUILD_CONFIG
 LDFLAGS_FOR_TARGET
 CXXFLAGS_FOR_TARGET
 CFLAGS_FOR_TARGET
+CONFIG_USE_MUSL
 DEBUG_PREFIX_CFLAGS_FOR_TARGET
 SYSROOT_CFLAGS_FOR_TARGET
 extra_host_libiberty_configure_flags
Index: gcc-5.2.0/configure.ac
===================================================================
--- gcc-5.2.0.orig/configure.ac
+++ gcc-5.2.0/configure.ac
@@ -2359,6 +2359,7 @@ if test "x$CFLAGS_FOR_TARGET" = x; then
   fi
 fi
 AC_SUBST(CFLAGS_FOR_TARGET)
+AC_SUBST(CONFIG_USE_MUSL)
 
 if test "x$CXXFLAGS_FOR_TARGET" = x; then
   if test "x${is_cross_compiler}" = xyes; then
Index: gcc-5.2.0/libgo/Makefile.in
===================================================================
--- gcc-5.2.0.orig/libgo/Makefile.in
+++ gcc-5.2.0/libgo/Makefile.in
@@ -4510,7 +4510,7 @@ s-syscall_arch: Makefile
 
 sysinfo.go: s-sysinfo; @true
 s-sysinfo: $(srcdir)/mksysinfo.sh config.h
-	CC="$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(OSCFLAGS) -O" $(SHELL) $(srcdir)/mksysinfo.sh
+	CC="$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(OSCFLAGS) $(CONFIG_USE_MUSL) -O" $(SHELL) $(srcdir)/mksysinfo.sh
 	$(SHELL) $(srcdir)/mvifdiff.sh tmp-sysinfo.go sysinfo.go
 	$(STAMP) $@
 
Index: gcc-5.2.0/Makefile.in
===================================================================
--- gcc-5.2.0.orig/Makefile.in
+++ gcc-5.2.0/Makefile.in
@@ -353,6 +353,7 @@ NM_FOR_BUILD = @NM_FOR_BUILD@
 RANLIB_FOR_BUILD = @RANLIB_FOR_BUILD@
 WINDMC_FOR_BUILD = @WINDMC_FOR_BUILD@
 WINDRES_FOR_BUILD = @WINDRES_FOR_BUILD@
+CONFIG_USE_MUSL = @CONFIG_USE_MUSL@
 
 # Special variables passed down in EXTRA_GCC_FLAGS.  They are defined
 # here so that they can be overridden by Makefile fragments.
@@ -412,6 +413,9 @@ CXXFLAGS = @CXXFLAGS@
 LIBCXXFLAGS = $(CXXFLAGS) -fno-implicit-templates
 GOCFLAGS = $(CFLAGS)
 
+MODULE_FLAGS-target-libgo = \
+	CONFIG_USE_MUSL="$(CONFIG_USE_MUSL)"
+
 TFLAGS =
 
 # Defaults for all stages; some are overridden below.
@@ -40930,8 +40934,8 @@ all-target-libgo: configure-target-libgo
 	s=`cd $(srcdir); ${PWD_COMMAND}`; export s; \
 	$(NORMAL_TARGET_EXPORTS)  \
 	(cd $(TARGET_SUBDIR)/libgo && \
-	  $(MAKE) $(BASE_FLAGS_TO_PASS) $(EXTRA_TARGET_FLAGS)   \
-		$(TARGET-target-libgo))
+	  $(MAKE) $(BASE_FLAGS_TO_PASS) $(EXTRA_TARGET_FLAGS) \
+		$(MODULE_FLAGS-target-libgo) $(TARGET-target-libgo))
 @endif target-libgo
 
 
Index: gcc-5.2.0/Makefile.tpl
===================================================================
--- gcc-5.2.0.orig/Makefile.tpl
+++ gcc-5.2.0/Makefile.tpl
@@ -356,6 +356,7 @@ NM_FOR_BUILD = @NM_FOR_BUILD@
 RANLIB_FOR_BUILD = @RANLIB_FOR_BUILD@
 WINDMC_FOR_BUILD = @WINDMC_FOR_BUILD@
 WINDRES_FOR_BUILD = @WINDRES_FOR_BUILD@
+CONFIG_USE_MUSL = @CONFIG_USE_MUSL@
 
 # Special variables passed down in EXTRA_GCC_FLAGS.  They are defined
 # here so that they can be overridden by Makefile fragments.
@@ -415,6 +416,9 @@ CXXFLAGS = @CXXFLAGS@
 LIBCXXFLAGS = $(CXXFLAGS) -fno-implicit-templates
 GOCFLAGS = $(CFLAGS)
 
+MODULE_FLAGS-target-libgo = \
+	CONFIG_USE_MUSL="$(CONFIG_USE_MUSL)"
+
 TFLAGS =
 
 # Defaults for all stages; some are overridden below.
@@ -1104,7 +1108,7 @@ all-[+prefix+][+module+]: configure-[+pr
 	[+exports+] [+extra_exports+] \
 	(cd [+subdir+]/[+module+] && \
 	  $(MAKE) $(BASE_FLAGS_TO_PASS) [+args+] [+stage1_args+] [+extra_make_flags+] \
-		$(TARGET-[+prefix+][+module+]))
+		$(MODULE_FLAGS-[+prefix+][+module+]) $(TARGET-[+prefix+][+module+]))
 @endif [+prefix+][+module+]
 
 [+ IF bootstrap +]
